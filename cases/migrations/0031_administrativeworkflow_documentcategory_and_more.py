# Generated by Django 4.2.7 on 2025-08-04 17:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cases', '0030_alter_grievance_assigned_to_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdministrativeWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_id', models.CharField(max_length=20, unique=True)),
                ('work_type', models.CharField(choices=[('POLICY_REVIEW', 'Policy Review'), ('AUDIT_RESPONSE', 'Audit Response'), ('HQ_COMPLIANCE', 'HQ Compliance'), ('INTERNAL_QUERY', 'Internal Query'), ('TRAINING_MATERIAL', 'Training Material'), ('SYSTEM_UPGRADE', 'System Upgrade'), ('OTHER', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=10)),
                ('status', models.CharField(choices=[('INITIATED', 'Initiated'), ('IN_PROGRESS', 'In Progress'), ('PENDING_REVIEW', 'Pending Review'), ('COMPLETED', 'Completed'), ('ON_HOLD', 'On Hold'), ('CANCELLED', 'Cancelled')], default='INITIATED', max_length=20)),
                ('initiated_date', models.DateTimeField(auto_now_add=True)),
                ('target_completion_date', models.DateField()),
                ('actual_completion_date', models.DateTimeField(blank=True, null=True)),
                ('current_holder', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='admin_work_current', to='cases.userprofile')),
                ('initiated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='admin_work_initiated', to='cases.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_case_specific', models.BooleanField(default=True)),
                ('retention_period_years', models.IntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Document Categories',
            },
        ),
        migrations.CreateModel(
            name='FileAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matter_description', models.CharField(max_length=500)),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('PENDING', 'Pending')], default='ACTIVE', max_length=20)),
                ('administrative_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cases.administrativeworkflow')),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cases.case')),
                ('grievance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cases.grievance')),
            ],
            options={
                'verbose_name': 'File Assignment',
                'verbose_name_plural': 'File Assignments',
            },
        ),
        migrations.CreateModel(
            name='FileMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('FORWARD', 'Forward'), ('RETURN', 'Return'), ('TRANSFER', 'Transfer')], max_length=20)),
                ('movement_date', models.DateTimeField(auto_now_add=True)),
                ('comments', models.TextField(blank=True)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='files_sent', to='cases.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='FileWorkflowStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_name', models.CharField(max_length=100)),
                ('responsible_role', models.CharField(choices=[('DH', 'Dealing Hand'), ('AAO', 'Assistant Accounts Officer'), ('AO', 'Accounts Officer'), ('Dy.CCA', 'Deputy Chief Controller of Accounts'), ('Jt.CCA', 'Joint Chief Controller of Accounts'), ('CCA', 'Chief Controller of Accounts'), ('Pr.CCA', 'Principal Chief Controller of Accounts'), ('ADMIN', 'Administrator')], max_length=20)),
                ('step_order', models.IntegerField()),
                ('expected_days', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('RETURNED', 'Returned for Clarification')], default='PENDING', max_length=20)),
                ('started_date', models.DateTimeField(blank=True, null=True)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cases.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='IndexRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_number', models.CharField(blank=True, help_text='Unique file identification number', max_length=50, null=True, unique=True)),
                ('file_format', models.CharField(choices=[('PHYSICAL', 'Physical'), ('E_OFFICE', 'e-Office'), ('HYBRID', 'Both Physical & e-Office')], default='PHYSICAL', max_length=10)),
                ('subject', models.CharField(help_text='Brief description of file subject/purpose', max_length=500)),
                ('date_of_opening', models.DateField(default=django.utils.timezone.now, help_text='Date when file was opened/created')),
                ('workflow_type', models.CharField(choices=[('Type_A', 'Type A (DH → AAO → AO)'), ('Type_B', 'Type B (DH → AAO → AO → Jt.CCA)'), ('Type_C', 'Type C (DH → AAO → AO → Jt.CCA → CCA)'), ('Type_Extended', 'Type Extended (Full Hierarchy)'), ('Administrative', 'Administrative Only'), ('Reference', 'Reference/Information Only')], help_text='Type of workflow this file follows', max_length=20)),
                ('trigger_event_type', models.CharField(choices=[('PERIODIC_MONTHLY', 'Periodic - Monthly'), ('PERIODIC_QUARTERLY', 'Periodic - Quarterly'), ('PERIODIC_HALF_YEARLY', 'Periodic - Half Yearly'), ('PERIODIC_YEARLY', 'Periodic - Yearly'), ('CASE_TYPE_TRIGGER', 'Case Type Trigger'), ('GRIEVANCE_TRIGGER', 'Grievance Trigger'), ('RECORD_TRIGGER', 'Record Requisition Trigger'), ('HQ_INSTRUCTION', 'HQ Instruction'), ('AUDIT_REQUIREMENT', 'Audit Requirement'), ('MANUAL', 'Manual/Ad-hoc'), ('OTHER', 'Other')], help_text='What triggered the creation of this file', max_length=25)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('CLOSED', 'Closed'), ('ARCHIVED', 'Archived'), ('TRANSFERRED', 'Transferred'), ('MISSING', 'Missing')], default='ACTIVE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('remarks', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='index_files_created', to=settings.AUTH_USER_MODEL)),
                ('current_location', models.ForeignKey(help_text='Current physical/digital location', on_delete=django.db.models.deletion.PROTECT, to='cases.location')),
                ('dh_responsible', models.ForeignKey(help_text='Dealing Hand responsible for custody and maintenance', limit_choices_to={'role': 'DH'}, on_delete=django.db.models.deletion.PROTECT, related_name='index_files_responsible', to='cases.userprofile')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='index_files_modified', to=settings.AUTH_USER_MODEL)),
                ('related_case_types', models.ManyToManyField(blank=True, help_text='Case types that may trigger this file', to='cases.casetype')),
            ],
            options={
                'verbose_name': 'Index Register Entry',
                'verbose_name_plural': 'Index Register Entries',
                'ordering': ['-date_of_opening', 'file_number'],
            },
        ),
        migrations.AlterModelOptions(
            name='record',
            options={'ordering': ['file_number'], 'verbose_name': 'Record', 'verbose_name_plural': 'Records'},
        ),
        migrations.RenameField(
            model_name='record',
            old_name='created_at',
            new_name='created_date',
        ),
        migrations.AlterUniqueTogether(
            name='record',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='historicalrecordrequisition',
            name='approved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalrecordrequisition',
            name='expected_return_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalrecordrequisition',
            name='fulfilled_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalrecordrequisition',
            name='priority_level',
            field=models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=10),
        ),
        migrations.AddField(
            model_name='historicalrecordrequisition',
            name='purpose',
            field=models.TextField(blank=True, default='', help_text='The reason for the record requisition.'),
        ),
        migrations.AddField(
            model_name='record',
            name='confidentiality_level',
            field=models.CharField(choices=[('PUBLIC', 'Public'), ('INTERNAL', 'Internal'), ('CONFIDENTIAL', 'Confidential'), ('SECRET', 'Secret')], default='INTERNAL', max_length=20),
        ),
        migrations.AddField(
            model_name='record',
            name='description',
            field=models.TextField(blank=True, help_text='Brief description of file contents'),
        ),
        migrations.AddField(
            model_name='record',
            name='digital_signature_status',
            field=models.CharField(choices=[('PENDING', 'Pending'), ('SIGNED', 'Digitally Signed'), ('NOT_REQUIRED', 'Not Required')], default='NOT_REQUIRED', max_length=20),
        ),
        migrations.AddField(
            model_name='record',
            name='eoffice_file_id',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='record',
            name='eoffice_url',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='record',
            name='file_format',
            field=models.CharField(choices=[('PHYSICAL', 'Physical'), ('E_OFFICE', 'e-Office'), ('HYBRID', 'Both Physical & e-Office')], default='PHYSICAL', max_length=10),
        ),
        migrations.AddField(
            model_name='record',
            name='file_number',
            field=models.CharField(default='-REQUIRED-', help_text='Unique file identification number', max_length=50),
        ),
        migrations.AddField(
            model_name='record',
            name='last_accessed',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='record',
            name='reference_number',
            field=models.CharField(blank=True, help_text='For HQ instructions or external references', max_length=100),
        ),
        migrations.AddField(
            model_name='record',
            name='remarks',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='record',
            name='volume_number',
            field=models.CharField(blank=True, help_text='For multi-volume files', max_length=20),
        ),
        migrations.AddField(
            model_name='recordrequisition',
            name='approved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recordrequisition',
            name='expected_return_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recordrequisition',
            name='fulfilled_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recordrequisition',
            name='priority_level',
            field=models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=10),
        ),
        migrations.AddField(
            model_name='recordrequisition',
            name='purpose',
            field=models.TextField(blank=True, default='', help_text='The reason for the record requisition.'),
        ),
        migrations.AlterField(
            model_name='record',
            name='current_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cases.location'),
        ),
        migrations.AlterField(
            model_name='record',
            name='pensioner',
            field=models.ForeignKey(blank=True, help_text='Related pensioner (if applicable)', null=True, on_delete=django.db.models.deletion.PROTECT, to='cases.ppomaster'),
        ),
        migrations.AlterField(
            model_name='record',
            name='record_type',
            field=models.CharField(choices=[('SERVICE_BOOK', 'Service Book'), ('PENSION_FILE', 'Pension File'), ('ABSENTEE_STATEMENT', 'Absentee Statement'), ('HQ_INSTRUCTIONS', 'HQ Instructions/References'), ('ADMINISTRATIVE', 'Administrative File'), ('FAMILY_DOCUMENTS', 'Family Documents'), ('WEEKLY_REPORTS', 'Weekly Reports'), ('FORTNIGHTLY_REPORTS', 'Fortnightly Reports'), ('MONTHLY_REPORTS', 'Monthly Reports'), ('QUARTERLY_REPORTS', 'Quarterly Reports'), ('AUDIT_FILES', 'Audit Files'), ('POLICY_FILES', 'Policy Files'), ('MTNL_FILES', 'MTNL Files'), ('OTHER', 'Other')], max_length=25),
        ),
        migrations.AlterField(
            model_name='record',
            name='status',
            field=models.CharField(choices=[('AVAILABLE', 'Available'), ('REQUISITIONED', 'Requisitioned'), ('IN_USE', 'In Use'), ('MISSING', 'Missing'), ('ARCHIVED', 'Archived'), ('RETURNED', 'Returned'), ('TRANSFERRED', 'Transferred')], default='AVAILABLE', max_length=20),
        ),
        migrations.AlterField(
            model_name='recordrequisition',
            name='records_requested',
            field=models.ManyToManyField(to='cases.record'),
        ),
        migrations.DeleteModel(
            name='HistoricalRecord',
        ),
        migrations.AddField(
            model_name='fileworkflowstep',
            name='index_file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_steps', to='cases.indexregister'),
        ),
        migrations.AddField(
            model_name='filemovement',
            name='index_file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='cases.indexregister'),
        ),
        migrations.AddField(
            model_name='filemovement',
            name='to_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='files_received', to='cases.userprofile'),
        ),
        migrations.AddField(
            model_name='fileassignment',
            name='index_file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='cases.indexregister'),
        ),
        migrations.RemoveField(
            model_name='record',
            name='updated_at',
        ),
        migrations.AddField(
            model_name='case',
            name='assigned_file',
            field=models.ForeignKey(blank=True, help_text='Index Register file in which this case is being dealt', null=True, on_delete=django.db.models.deletion.PROTECT, to='cases.indexregister'),
        ),
        migrations.AddField(
            model_name='record',
            name='document_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cases.documentcategory'),
        ),
    ]
